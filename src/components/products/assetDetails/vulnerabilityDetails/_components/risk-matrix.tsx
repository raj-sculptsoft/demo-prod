import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import SummaryCardWrapper from "../../../../dashboard/_components/summary/summary-card-wrapper";

interface RiskMatrixProps {
  impact: string;
  likelihood: string;
}

export default function RiskMatrix({ impact, likelihood }: RiskMatrixProps) {
  const matrix = [
    { impact: "Critical", values: ["Medium", "High", "Critical", "Critical"] },
    { impact: "High", values: ["Low", "Medium", "High", "Critical"] },
    { impact: "Medium", values: ["Low", "Medium", "Medium", "High"] },
    { impact: "Low", values: ["Low", "Low", "Medium", "Medium"] },
  ];

  const likelihoodLevels = ["Risk Matrix", "Low", "Medium", "High", "Critical"];

  const getCellColor = (impact: string, likelihood: string) => {
    if (impact === "Critical" && likelihood === "Critical")
      return "bg-[#D04D6C]";
    if (impact === "Critical" && likelihood === "High") return "bg-[#D04D6C]";
    if (impact === "Critical" && likelihood === "Medium") return "bg-[#FB9199]";
    if (impact === "Critical" && likelihood === "Low") return "bg-[#FEC53DB2]";
    if (impact === "High" && likelihood === "Critical") return "bg-[#D04D6C]";
    if (impact === "High" && likelihood === "High") return "bg-[#FB9199]";
    if (impact === "High" && likelihood === "Medium") return "bg-[#FEC53DB2]";
    if (impact === "High" && likelihood === "Low") return "bg-[#31D080B2]";
    if (impact === "Medium" && likelihood === "Critical") return "bg-[#FB9199]";
    if (impact === "Medium" && likelihood === "High") return "bg-[#FEC53DB2]";
    if (impact === "Medium" && likelihood === "Medium") return "bg-[#FEC53DB2]";
    if (impact === "Medium" && likelihood === "Low") return "bg-[#31D080B2]";
    if (impact === "Low" && likelihood === "Critical") return "bg-[#FEC53DB2]";
    if (impact === "Low" && likelihood === "High") return "bg-[#FEC53DB2]";
    if (impact === "Low" && likelihood === "Medium") return "bg-[#31D080B2]";
    if (impact === "Low" && likelihood === "Low") return "bg-[#31D080B2]";
    return "bg-[#77DD77]";
  };

  return (
    <SummaryCardWrapper title="" cardMainClassName="statsCardShadow max-h-96">
      <div className="mb-3 text-center font-semibold">Likelihood</div>
      <div className="relative px-4">
        <Table className="w-full border-separate border-spacing-0">
          <TableHeader>
            <TableRow>
              {likelihoodLevels.map((likelihood, index) => (
                <TableHead
                  key={`header-${likelihood}-${index}`}
                  className={`pointer-events-none min-w-24 text-center font-normal ${index > 0 ? "border bg-bodyBackground" : "border"}`}
                >
                  {likelihood}
                </TableHead>
              ))}
            </TableRow>
          </TableHeader>
          <TableBody>
            {matrix.map((row, rowIndex) => (
              <TableRow key={`row-${rowIndex}-${row.impact}`}>
                <TableCell className="bg-bodyBackground text-center font-normal">
                  {row.impact}
                </TableCell>
                {row.values.map((value, colIndex) => {
                  const cellLikelihood = likelihoodLevels[colIndex + 1] ?? "";
                  const isActive =
                    row.impact === impact && cellLikelihood === likelihood;
                  const borderStyle = isActive
                    ? "3px solid black"
                    : "3px solid white";

                  return (
                    <TableCell
                      key={`cell-${rowIndex}-${colIndex}-${row.impact}-${cellLikelihood}`}
                      className={`text-center ${getCellColor(row.impact, cellLikelihood)}`}
                      style={{
                        border: borderStyle,
                        boxSizing: "border-box",
                      }}
                    >
                      {value}
                    </TableCell>
                  );
                })}
              </TableRow>
            ))}
          </TableBody>
        </Table>
        <div className="absolute -left-6 top-1/2 origin-center -translate-y-1/2 -rotate-90 transform whitespace-nowrap font-semibold">
          Impact
        </div>
      </div>
    </SummaryCardWrapper>
  );
}
